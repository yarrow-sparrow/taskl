plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.openapi.generator" version "7.3.0"
}

group = 'com.github.yarrow.sparrow'
version = '0.0.1-SNAPSHOT'

sourceSets {
    main {
        java {
            srcDir layout.buildDirectory.dir("generated/src/main/java").get().asFile.path
        }
    }
    test {
        java {
            srcDir layout.buildDirectory.dir("generated/src/main/java").get().asFile.path
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

var lombokVersion = '1.18.30'
var mapStructVersion = '1.5.5.Final'
var jsonWebTokenVersion = '0.12.3'
var testContainersVersion = '1.19.3'

dependencies {
    implementation 'org.projectlombok:lombok:' + lombokVersion
    annotationProcessor 'org.projectlombok:lombok:' + lombokVersion
    testAnnotationProcessor 'org.projectlombok:lombok:' + lombokVersion

    implementation 'org.mapstruct:mapstruct:' + mapStructVersion
    annotationProcessor 'org.mapstruct:mapstruct-processor:' + mapStructVersion
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:' + mapStructVersion

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'io.jsonwebtoken:jjwt-api:' + jsonWebTokenVersion
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:' + jsonWebTokenVersion
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:' + jsonWebTokenVersion

    implementation 'org.testcontainers:testcontainers:' + testContainersVersion
    implementation 'org.testcontainers:junit-jupiter:' + testContainersVersion
    implementation 'org.testcontainers:mongodb:' + testContainersVersion
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.12.2'

    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.11'

    implementation 'com.github.f4b6a3:uuid-creator:5.3.3'
    implementation 'io.github.classgraph:classgraph:4.8.165'

    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

application {
    //noinspection GrUnresolvedAccess
    mainClassName group.toString() + '.OpenApiGeneratorApplication'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

/**
 * https://marco.dev/spring-boot-openapi-generator
 * https://openapi-generator.tech/docs/generators/spring
 */
openApiGenerate {
    generatorName.set("spring")
    inputSpec.set(layout.projectDirectory.file("src/main/resources/openapi/api.yaml").asFile.path)
    outputDir.set(layout.buildDirectory.dir("generated").get().asFile.path)
    apiPackage.set(group.toString() + ".generated.api")
    invokerPackage.set(group.toString())
    modelPackage.set(group.toString() + ".generated.model")
    configOptions.set([
            useSpringBoot3: "true",
            delegatePattern: "true",
            useTags: "true",
            unhandledException: "true",
            useBeanValidation: "true",
            performBeanValidation: "true",
            serializableModel: "true",
    ])
}
tasks.compileJava {
    dependsOn("openApiGenerate")
}

test {
    useJUnitPlatform()
}


jar {
    manifest {
        attributes 'Main-Class': group.toString() + '.OpenApiGeneratorApplication'
    }
}
